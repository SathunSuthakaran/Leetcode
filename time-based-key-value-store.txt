from bisect import insort, bisect_right

class TimeMap:

    def __init__(self):
        self.dict = {}  # Key -> {timestamp -> value}
        self.times = {}  # Key -> Sorted list of timestamps

    def set(self, key: str, value: str, timestamp: int) -> None:
        if key not in self.dict:
            self.dict[key] = {}
            self.times[key] = []
        self.dict[key][timestamp] = value
        insort(self.times[key], timestamp)

    def get(self, key: str, timestamp: int) -> str:
        if key not in self.dict or key not in self.times:
            return ""
        timestamps = self.times[key]
        if not timestamps or timestamps[0] > timestamp:
            return ""
        # Find the largest timestamp <= timestamp
        index = bisect_right(timestamps, timestamp) - 1
        closest_time = timestamps[index]
        return self.dict[key][closest_time]
