class Solution:
    def longestPalindrome(self, s: str) -> str:
        left = 0
        right = 2
        length = len(s)
        def widen(lefti, righti):
            if lefti > 0 and righti < length:
                temp = s[lefti-1:righti + 1]
                if temp == temp[::-1]:
                    return widen(lefti-1, righti + 1)  
                else:
                    return s[lefti: righti]
            else:
                return s[lefti:righti]
        max_palindrome = ""   
        for i in range(length):
            odd_palindrome = widen(i, i+1)

            if i < length-1 and s[i] == s[i+1]:
                even_palindrome = widen(i, i + 2)
            else:
                even_palindrome = ""
            
            if len(odd_palindrome) >= len(even_palindrome) and len(odd_palindrome) >= len(max_palindrome):
                max_palindrome = odd_palindrome
            elif len(even_palindrome) > len(max_palindrome):
                max_palindrome = even_palindrome
            


        return max_palindrome
