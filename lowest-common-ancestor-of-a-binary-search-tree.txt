# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        if ((p.val <= root.val <= q.val) or q.val <= root.val <=p.val):
            print(4)
            return root
        elif root.left and (p.val <= root.val and q.val <= root.val):
            print(1, p.val <= root.left.val <= q.val,q.val <= root.left.val <= p.val )
            return self.lowestCommonAncestor(root.left, p, q)
        elif root.right and (p.val >= root.val and q.val >= root.val):
            print(2)
            return self.lowestCommonAncestor(root.right, p, q)
