# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def averageOfSubtree(self, root: TreeNode) -> int:
        counter = []
        def recurse(root):
            if not root:
                return (0, 0) #sum, count
            else:
                left = recurse(root.left)
                right = recurse(root.right)
                curr_sum = left[0] + right[0] + root.val
                curr_count = 1 + left[1] + right[1]
                if (curr_sum // curr_count) == root.val:
                    print(root.val)
                    counter.append(1)
                return (curr_sum, curr_count)
        recurse(root)
        return sum(counter)