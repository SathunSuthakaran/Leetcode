class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        fresh_oranges = 0
        empty = 0
        rotting_oranges = 0
        minutes = 0
        width = len(grid)
        height = len(grid[0])
        queue = deque()
        for row in range(width):
            for col in range(height):
                if grid[row][col] == 1:
                    fresh_oranges +=1
                elif grid[row][col] == 0:
                    empty +=1
                else:
                    rotting_oranges +=1
                    queue.append((row, col))
        
        directions = [(0,1), (1,0), (0, -1), (-1, 0)]
        
        while queue:
            for i in range(len(queue)):
                x,y = queue.popleft()
                for dx, dy in directions:
                    nx, ny = dx + x, dy + y
                    if 0 <= nx < width and 0 <= ny < height and grid[nx][ny] == 1:
                        grid[nx][ny] = 2
                        queue.append((nx, ny))
                        fresh_oranges -=1
            
            if queue:
                minutes +=1
            
        
        return minutes if fresh_oranges == 0 else -1