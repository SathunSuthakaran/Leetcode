# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        list_length = 0
        curr = head
        while curr:
            list_length += 1
            curr = curr.next
        if n == list_length:
            return head.next
        list_length -= n
        curr = head
        for _ in range(list_length - 1):
            curr = curr.next
        curr.next = curr.next.next
        return head